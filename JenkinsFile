pipeline {
    agent any

    tools {
        nodejs "Node24"  // configure Node.js in Jenkins (Manage Jenkins > Global Tool Configuration)
    }

    environment {
        BACKEND_DIR = "backend"
        FRONTEND_DIR = "frontend"
    }

    stages {
        stage('Checkout') {
            steps {
                git branch: 'main', url: 'https://github.com/abhishekparipally1234/ScrabbleGame.git'
            }
        }

        stage('Install Backend Deps') {
            steps {
                dir("${BACKEND_DIR}") {
                    sh 'npm install'
                }
            }
        }

        stage('Install Frontend Deps') {
            steps {
                dir("${FRONTEND_DIR}") {
                    sh 'npm install'
                }
            }
        }

        stage('Backend Tests') {
            steps {
                dir("${BACKEND_DIR}") {
                    sh 'npm test || echo "No backend tests defined"'
                }
            }
        }

        stage('Frontend Tests') {
            steps {
                dir("${FRONTEND_DIR}") {
                    sh 'npm test || echo "No frontend tests defined"'
                }
            }
        }

        stage('Build Frontend') {
            steps {
                dir("${FRONTEND_DIR}") {
                    sh 'npm run build'
                }
                // Optional: copy React build into backend
                sh "cp -r ${FRONTEND_DIR}/build/* ${BACKEND_DIR}/public/"
            }
        }

        stage('Dockerize & Deploy') {
            steps {
                script {
                    // Example: Build Docker image and push to registry
                    sh "docker build -t scrabblegame:latest ."
                    // For real deployments, you'd push to DockerHub/ECR/GCP and then deploy
                }
            }
        }
    }

    post {
        always {
            archiveArtifacts artifacts: '**/build/**', allowEmptyArchive: true
        }
        success {
            echo "✅ MERN pipeline executed successfully!"
        }
        failure {
            echo "❌ MERN pipeline failed!"
        }
    }
}
